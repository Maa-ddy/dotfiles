# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Noto color emoji 6
# Maaddy's theme colors
set $cyan #00e6da
set $gray #454747
set $bright-gray #dbdbdb
set $black #000000
set $bright-green #00ff00



# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec_always compton --config ~/.config/compton.conf

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym XF86MonBrightnessUp exec brightnessctl -d "intel_backlight" set +2%
bindsym XF86MonBrightnessDown exec brightnessctl -d "intel_backlight" set 2%-

bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioPlay exec playerctl play-pause

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Shift+Return exec i3-sensible-terminal
bindsym $mod+Return exec "~/.config/i3/scripts/i3-scratchpad -s DP-1 -t i3-sensible-terminal"
bindsym $mod+Shift+slash scratchpad show
bindsym $mod+slash move scratchpad
# floating/resizing windows
for_window [class="Pavucontrol"] floating enable
for_window [class="Pavucontrol"] resize set 1000 1000
for_window [class="Pavucontrol"] move position 50 50

for_window [class="TelegramDesktop"] floating enable
for_window [title="DevTools*"] floating enable
for_window [title="Developer Tools*"] floating enable

for_window [class="Gnome-terminal"] floating enable
for_window [class="Gnome-terminal"] resize set 1400 900
for_window [class="Gnome-terminal"] move position center

for_window [class="gnome-text-editor"] floating enable
for_window [class="gnome-text-editor"] resize set 1350 920
for_window [class="gnome-text-editor"] move position center


for_window [class="Arandr"] floating enable
for_window [class="Arandr"] resize set 700 700
for_window [class="Arandr"] move position mouse


for_window [class="vlc"] floating enable
for_window [class="vlc"] resize set 400 400
for_window [class="vlc"] move position mouse

for_window [class="Org.gnome.Nautilus"] floating enable
for_window [class="Org.gnome.Nautilus"] resize set 1100 800
for_window [class="Org.gnome.Nautilus"] move position mouse

for_window [class="Gedit"] floating enable
for_window [class="Gedit"] resize set 1100 800
for_window [class="Gedit"] move position mouse

for_window [class="Blueman-manager"] floating enable
for_window [class="Blueman-manager"] resize set 1100 800
for_window [class="Blueman-manager"] move position mouse


# slide file browser from bottom
bindsym $mod+d exec "~/.config/i3/scripts/i3-scratchpad -s DP-1 -d1100x800 -p0,0 -mb -t nautilus ~/Desktop"

# start a browser side window
bindsym $mod+b exec "~/.config/i3/scripts/i3-scratchpad -s DP-1 -d850x1060 -p0,0 -mr -tatr firefox --new-window https://chat.openai.com/chat"
bindsym $mod+Shift+b exec "~/.config/i3/scripts/i3-scratchpad -s DP-1 -d850x1060 -p0,-35 -mr -tabr librewolf --new-window https://www.google.com"


# kill focused window
bindsym $mod+Shift+q kill

# spawn a code instance
#bindsym $mod+bracketleft exec codium

# email client: thunderbird
bindsym Home exec "~/.config/i3/scripts/i3-scratchpad -s DP-1 -d1100x96% -p-10,-47 -mr -tabr thunderbird" 
# teams (behind the email client mapping)
bindsym Shift+Home exec "teams && ~/.config/i3/scripts/i3-scratchpad -s DP-1 -d1100x96% -p-10,-47 -mr -tabr teams" 

# take a note
bindsym $mod+apostrophe exec "~/.config/i3/scripts/i3-scratchpad -s DP-1 -d1500x900 -p0,-35 -ml -tabl brave-browser --app=http://mahdy.thinkpad:3120/notes"

# open tools dashboard
bindsym $mod+period exec "~/.config/i3/scripts/i3-scratchpad -s DP-1 -d850x1050 -p0,0 -ml -tatl brave-browser --new-window http://localhost:3111"

# processes monitoring
bindsym $mod+Delete exec "~/.config/i3/scripts/i3-scratchpad -s DP-1 -d800x900 -p500,-35 -mb -tabc i3-sensible-terminal -e btop"

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
bindsym $mod+y exec rofi -show drun -lines 7 -eh 2 -padding 50 -separator-style none -hide-scrollbar
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "üí¨"
set $ws2 "üîÄ"
set $ws3 "üè†"
set $ws4 "4"
set $ws5 "üíª"
set $ws6 "üñ•Ô∏è"
set $ws7 "üéÆ"
set $ws8 "üíé"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window‚Äôs width.
        # Pressing right will grow the window‚Äôs width.
        # Pressing up will shrink the window‚Äôs height.
        # Pressing down will grow the window‚Äôs height.
        bindsym j resize shrink width 1 px or 1 ppt
        bindsym k resize grow height 1 px or 1 ppt
        bindsym l resize shrink height 1 px or 1 ppt
        bindsym semicolon resize grow width 1 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 50 px or 50 ppt
        bindsym Down resize grow height 50 px or 50 ppt
        bindsym Up resize shrink height 50 px or 50 ppt
        bindsym Right resize grow width 50 px or 50 ppt

        bindsym shift+Left resize shrink width 500 px or 500 ppt
        bindsym shift+Down resize grow height 500 px or 500 ppt
        bindsym shift+Up resize shrink height 500 px or 500 ppt
        bindsym shift+Right resize grow width 500 px or 500 ppt


        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

mode "opacity" {
  bindsym plus exec transset -a --inc 0.1
  bindsym minus exec transset -a --dec 0.1

  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+control+slash mode "default"
}

bindsym $mod+control+slash mode "opacity"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
        #status_command i3blocks
#}


# custom bindings
bindsym $mod+backslash exec betterlockscreen -l blur
bindsym $mod+shift+backslash exec betterlockscreen -l blur & systemctl suspend
bindsym $mod+plus exec env XDG_CURRENT_DESKTOP=GNOME gnome-control-center
bindsym $mod+control+s exec flameshot gui
bindsym $mod+p exec copyq menu
bindsym $mod+minus exec --no-startup-id polybar-msg cmd toggle



exec_always while true; do feh --randomize --bg-scale ~/Pictures/wallpapers/*; sleep 900; done
exec_always while true; do betterlockscreen -u "$(find ~/Pictures/wallpapers -type f \( -iname '*.jpg' -o -iname '*.png' \) | shuf -n 1)" --blur 0.8; sleep 900; done
exec_always ~/.config/polybar/launch.sh
exec copyq

#window colors          border          bg              text           indicator
client.focused          $cyan           $cyan           $black         $bright-green
client.unfocused        $gray           $gray           $bright-gray   $bright-green
client.focused_inactive $gray           $gray           $bright-gray   $bright-green
client.urgent           $bright-green   $bright-green   $black         $cyan

for_window [class="^.*"] border pixel 1

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
#for_window [class="^.*"] border pixel 0
gaps inner 20
gaps outer 3

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"
bindsym $mod+Tab exec rofi -show window
#bindsym $mod+u exec rofi -modi windowcd -show windowcd -selected-row 1 & sleep 0.15 && xdotool key Return
#bindsym $mod+Shift+Tab exec rofi -show windowcd

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 1
        bindsym minus gaps inner current minus 1
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 1
        bindsym Shift+minus gaps inner all minus 1
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 1
        bindsym minus gaps outer current minus 1
        bindsym 0     gaps outer current set 0
        bindsym c     gaps outer current set 100

        bindsym Shift+plus  gaps outer all plus 1
        bindsym Shift+minus gaps outer all minus 1
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


# trackpad default config
# list devices:
# xinput list
# list device props:
# xinput list-props <device_id>

# configure touchpad props (such as natural scroll, tap to click, ...)
exec_always xinput set-prop $(xinput | grep Touchpad | grep -oP 'id=\K[0-9]+') 342 1
exec_always xinput set-prop $(xinput | grep Touchpad | grep -oP 'id=\K[0-9]+') 351 1
exec_always xinput set-prop $(xinput | grep Touchpad | grep -oP 'id=\K[0-9]+') 350 1
exec_always xinput set-prop $(xinput | grep Touchpad | grep -oP 'id=\K[0-9]+') 371 1
exec_always xinput set-prop $(xinput | grep Touchpad | grep -oP 'id=\K[0-9]+') 372 1
exec_always xinput set-prop $(xinput | grep Touchpad | grep -oP 'id=\K[0-9]+') 318 1

#exec_always xinput set-prop 15 342 1
#exec_always xinput set-prop 15 351 1
#exec_always xinput set-prop 15 371 1
#exec_always xinput set-prop 15 372 1
#exec_always xinput set-prop 15 318 1


bindsym $mod+m exec dunstctl close
bindsym $mod+Shift+m exec dunstctl close-all
bindsym $mod+n exec dunstctl history-pop
bindsym $mod+Shift+n exec dunstctl context
